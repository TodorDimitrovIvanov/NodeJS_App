/**
 * Scroll the canvas's viewport to the element
 * @param  {[type]} el [description]
 * @return {[type]}    [description]
 */
scrollToElement(el) {
  const rect = el.getBoundingClientRect();
  const win = el.ownerDocument.defaultView;
  var yPos = rect.top;
  var yScroll = win.scrollY;
  var interval = setInterval(() => {
    yScroll -= 10;
    win.scroll(0, yScroll);
    if (el.getBoundingClientRect().top >= 0) {
      clearInterval(interval);
    }
  }, 5);

  /*
  var btn = document.getElementById('x');
  btn.addEventListener("click", function() {
    var i = 10;
    var int = setInterval(function() {
      window.scrollTo(0, i);
      i += 10;
      if (i == 200) clearInterval(int);
    }, 20);
  })

  function findPos(obj) {
    var curleft = 0,
      curtop = 0;
    do {
      curleft += obj.offsetLeft;
      curtop += obj.offsetTop;
    } while (obj = obj.offsetParent);
    return {
      left: curleft,
      top: curtop
    };
  }

  var loopAnimateScroll = function (timestamp) {
    if (!start) { start = timestamp; }
    timeLapsed += timestamp - start;
    percentage = (timeLapsed / parseInt(animateSettings.speed, 10));
    percentage = (percentage > 1) ? 1 : percentage;
    position = startLocation + (distance * easingPattern(animateSettings, percentage));
    window.scrollTo(0, Math.floor(position));
    if (!stopAnimateScroll(position, endLocation)) {
      window.requestAnimationFrame(loopAnimateScroll);
      start = timestamp;
    }
  };

  export const polyfill = (() => {
    let clock = Date.now();

    return (callback) => {
      const currentTime = Date.now();

      if (currentTime - clock > 16) {
        clock = currentTime;
        callback(currentTime);
      } else {
        setTimeout(() => polyfill(callback), 0);
      }
    };
  })();


  export const requestAnimationFrame = window.requestAnimationFrame ||
                                     window.webkitRequestAnimationFrame ||
                                     window.mozRequestAnimationFrame    ||
                                     polyfill;
   */
},
